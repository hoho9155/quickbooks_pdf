<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Intuit.Ipp.Core</name>
    </assembly>
    <members>
        <member name="T:Intuit.Ipp.Core.Configuration.AdvancedLogger">
            <summary>
            Contains properties used to set the Logging mechanism.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.AdvancedLogger.RequestAdvancedLog">
            <summary>
            Gets or sets the Request logging mechanism.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.BaseUrl">
            <summary>
            Base Urls for QBO and IPS.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.BaseUrl.Qbo">
            <summary>
            Gets or sets the url for QuickBooks Online Rest Service.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.BaseUrl.Ips">
            <summary>
            Gets or sets the url for Platform Rest Service.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.BaseUrl.OAuthAccessTokenUrl">
            <summary>
            Gets or sets the url for OAuth Authentication server.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.BaseUrl.UserNameAuthentication">
            <summary>
            Gets or sets the url for UserName Authentication server.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.CompressionFormat">
            <summary>
            Format used to compress data.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Configuration.CompressionFormat.None">
            <summary>
            No compression.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Configuration.CompressionFormat.GZip">
            <summary>
            GZip compression.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Configuration.CompressionFormat.Deflate">
            <summary>
            Deflate compression.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.NamespaceDoc">
            <summary>
            Intuit.IPP.Core has ServiceContext class which must be created to invoke REST Service APIs. 
            The assembly provides different constructors such as, OAuth, SAML and, User name and password to initiate 
            ServiceContext class.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.IppConfiguration">
            <summary>
            Ipp configuration.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IppConfiguration.AdvancedLogger">
            <summary>
            Gets or sets the Serilog Logger mechanism.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IppConfiguration.Logger">
            <summary>
            Gets or sets the Logger mechanism.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IppConfiguration.Security">
            <summary>
            Gets or sets the Security mechanism like OAuth.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IppConfiguration.Message">
            <summary>
            Gets or sets the Message settings like Compression, Serialization.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IppConfiguration.RetryPolicy">
            <summary>
            Gets or sets the Retry Policy used to retry service calls when Retry-able Exceptions are generated.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IppConfiguration.BaseUrl">
            <summary>
            Gets or sets the Base Urls like Pre-Production url's.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IppConfiguration.VerifierToken">
            <summary>
            Gets or sets the Webhooks Verifier token.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IppConfiguration.MinorVersion">
            <summary>
            Gets or sets the minorVersion
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.IRequestResponse">
            <summary>
            Contains properties common to Request and Response.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IRequestResponse.SerializationFormat">
            <summary>
            Gets or sets the Serialization mechanism like Json, Xml.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.IRequestResponse.CompressionFormat">
            <summary>
            Gets or sets the Compression Format like GZip, Deflate or None.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.JsonFileConfigurationProvider">
            <summary>
            Specifies the Default Json file configuration provider implementation used by the SDK.
            By default reads "appsettings.json" file.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Configuration.JsonFileConfigurationProvider.GetConfiguration">
            <summary>
            Reads the configuration from the config file and converts it to custom
            config objects which the end developer will use to get or set the properties.
            </summary>
            <returns>The custom config object.</returns>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.Logger">
            <summary>
            Contains properties used to set the Logging mechanism.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.Logger.RequestLog">
            <summary>
            Gets or sets the Request logging mechanism.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.Logger.CustomLogger">
            <summary>
            Gets or sets the Custom logger implementation class.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.MemoryConfigurationProvider">
            <summary>
            Specifies the configuration provider, that returns user provided <see cref="T:Intuit.Ipp.Core.Configuration.IppConfiguration"/>
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Configuration.MemoryConfigurationProvider.#ctor(Intuit.Ipp.Core.Configuration.IppConfiguration)">
            <summary>
            Check given new <see cref="T:Intuit.Ipp.Core.Configuration.IppConfiguration"/> and fill some properties if they isn't setted.
            </summary>
            <param name="cfg"></param>
        </member>
        <member name="M:Intuit.Ipp.Core.Configuration.MemoryConfigurationProvider.GetConfiguration">
            <summary>
            Returns given configuration
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.Message">
            <summary>
            Contains properties about the Requst and Response configuration settings.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.Message.Request">
            <summary>
            Gets or sets the Request configuration settings.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.Message.Response">
            <summary>
            Gets or sets the Response configuration settings.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.MinorVersion">
            <summary>
            minorVersion for QBO
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.MinorVersion.Qbo">
            <summary>
            Gets or sets the minorVersion for QuickBooks Online Rest Service.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.Request">
            <summary>
            Contains properties about how to sent the request to the ids server like Compression, Serialization etc.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.RequestAdvancedLog">
            <summary>
            Contains properties used to indicate whether request and response messages are to be logged.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Configuration.RequestAdvancedLog.serviceRequestLoggingLocationForFile">
            <summary>
            request logging location.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.RequestAdvancedLog.EnableSerilogRequestResponseLoggingForDebug">
            <summary>
            Gets or sets a value indicating whether to enable reqeust response logging for Debug logs.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.RequestAdvancedLog.EnableSerilogRequestResponseLoggingForTrace">
            <summary>
            Gets or sets a value indicating whether to enable reqeust response logging for Trace logs.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.RequestAdvancedLog.EnableSerilogRequestResponseLoggingForConsole">
            <summary>
            Gets or sets a value indicating whether to enable reqeust response logging for Console logs.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.RequestAdvancedLog.EnableSerilogRequestResponseLoggingForFile">
            <summary>
            Gets or sets a value indicating whether to enable reqeust response logging for logs.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.RequestAdvancedLog.ServiceRequestLoggingLocationForFile">
            <summary>
            Gets or sets the service request logging location for File, Rolling File.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.RequestAdvancedLog.CustomLogger">
            <summary>
            Serilog CustomLogger
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.RequestLog">
            <summary>
            Contains properties used to indicate whether request and response messages are to be logged.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Configuration.RequestLog.serviceRequestLoggingLocation">
            <summary>
            request logging location.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.RequestLog.EnableRequestResponsLogging">
            <summary>
            Gets or sets a value indicating whether to enable reqeust response logging.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.RequestLog.EnableRequestResponseLogging">
            <summary>
            Gets or sets a value indicating whether to enable reqeust response logging.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.RequestLog.ServiceRequestLoggingLocation">
            <summary>
            Gets or sets the service request logging location.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.Response">
            <summary>
            Contains properties about how the response from ids server is requested for like Compression, Serialization etc.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.SerializationFormat">
            <summary>
            Serialization format enumeration.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Configuration.SerializationFormat.Xml">
            <summary>
            Xml Serialization Format.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Configuration.SerializationFormat.Json">
            <summary>
            Java Script Obejct Notation Serialization Format.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Configuration.SerializationFormat.Custom">
            <summary>
            Custom serialization format.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Configuration.VerifierToken">
            <summary>
            VerifierToken for Webhooks 
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Configuration.VerifierToken.Value">
            <summary>
            Gets or sets the value of  Verifier token for Webhooks Service
            </summary>        
        </member>
        <member name="T:Intuit.Ipp.Core.CoreHelper">
            <summary>
            Helper class.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.CoreHelper.AdvancedLogging">
            <summary>
            Gets or sets Serilog Request Logging.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.CoreHelper.GetSerializer(Intuit.Ipp.Core.ServiceContext,System.Boolean)">
            <summary>
            Gets the serializer mechanism using the service context and the depending on the request and response.
            </summary>
            <param name="serviceContext">The service context object.</param>
            <param name="isRequest">Specifies whether to return serializer mechanism for reqeust or response.</param>
            <returns>The Serializer mechanism.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.CoreHelper.ParseResponseIntoXml(System.String)">
            <summary>
            Parses the response string to an XmlDocument object.
            </summary>
            <param name="response">The response string.</param>
            <returns>The XmlDocument object.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.CoreHelper.CheckNullResponseAndThrowException(System.String)">
            <summary>
            Checks whether the reponse is null or empty and throws communication exception.
            </summary>
            <param name="response">The response from the query service.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.CoreHelper.GetCompressor(Intuit.Ipp.Core.ServiceContext,System.Boolean)">
            <summary>
            Gets the compression mechanism using the service context and the depending on the request and response.
            </summary>
            <param name="serviceContext">The service context object.</param>
            <param name="isRequest">Specifies whether to return compression mechanism for reqeust or response.</param>
            <returns>The Compression mechanism.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.CoreHelper.GetRequestLogging(Intuit.Ipp.Core.ServiceContext)">
            <summary>
            Gets the Request Response Logging mechanism.
            </summary>
            <param name="serviceContext">The serivce context object.</param>
            <returns>Returns value which specifies the request response logging mechanism.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.CoreHelper.GetAdvancedLogging(Intuit.Ipp.Core.ServiceContext)">
            <summary>
            Gets the Request Response Logging mechanism for advanced logging using serilog.
            </summary>
            <param name="serviceContext">The serivce context object.</param>
            <returns>Returns value which specifies the request response logging mechanism.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.CoreHelper.IsInvalidaExponentialRetryMode(System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Checks whether the retry count is less than or equal to zero.
            Checks whether the timespan values are zero.
            </summary>
            <param name="retryCount">Ther retry count.</param>
            <param name="minBackoff">The Min interval value.</param>
            <param name="maxBackoff">The Max value.</param>
            <param name="deltaBackoff">The Delta backoff value.</param>
            <returns>Returns true if parameter values are correct else false.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.CoreHelper.IsInvalidaIncrementalRetryMode(System.Int32,System.TimeSpan,System.TimeSpan)">
            <summary>
            Checks whether the retry count is less than or equal to zero.
            Checks whether the timespan values are zero.
            </summary>
            <param name="retryCount">Ther retry count.</param>
            <param name="initialInterval">The initial interval value.</param>
            <param name="increment">The increment value.</param>
            <returns>Returns true if parameter values are correct else false.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.CoreHelper.IsInvalidaLinearRetryMode(System.Int32,System.TimeSpan)">
            <summary>
            Checks whether the retry count is less than or equal to zero.
            Checks whether the timespan value is zero.
            </summary>
            <param name="retryCount">Ther retry count.</param>
            <param name="interval">The interval value.</param>
            <returns>Returns true if parameter values are correct else false.</returns>
        </member>
        <member name="T:Intuit.Ipp.Core.NamespaceDoc">
            <summary>
            Intuit.IPP.Core has ServiceContext class which must be created to invoke REST Service APIs. 
            The assembly provides different constructors such as, OAuth, SAML and, User name and password to initiate 
            ServiceContext class.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.IConfigurationProvider">
            <summary>
            Interface, that can provide <see cref="T:Intuit.Ipp.Core.Configuration.IppConfiguration"/> from file for example.
            <seealso cref="T:Intuit.Ipp.Core.Configuration.JsonFileConfigurationProvider"/>
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.IConfigurationProvider.GetConfiguration">
            <summary>
            Returns the <see cref="T:Intuit.Ipp.Core.Configuration.IppConfiguration"/> object.
            </summary>
            <returns>The custom config object.</returns>
        </member>
        <member name="T:Intuit.Ipp.Core.Rest.IRestHandler">
            <summary>
            IRestHandler contains the methods for preparing the REST request, calls REST services and returns the response.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.IRestHandler.PrepareRequest(Intuit.Ipp.Core.Rest.RequestParameters,System.Object,System.String,System.Boolean)">
            <summary>
            Prepares the HttpWebRequest along with authentication header added to the request.
            </summary>
            <param name="requestParameters">The parameters.</param>
            <param name="requestBody">The request entity.</param>
            <param name="oauthRequestUri">The OAuth request uri.</param>
            <returns>
            Http web request object.
            </returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.IRestHandler.GetResponse(System.Net.HttpWebRequest)">
            <summary>
            Returns the response by calling REST service.
            </summary>
            <param name="request">The request.</param>
            <returns>Response from REST service.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.IRestHandler.GetResponseStream(System.Net.HttpWebRequest)">
            <summary>
            Returns the response as streamn by calling REST service.
            </summary>
            <param name="request">The request.</param>
            <returns>Response from REST service.</returns>
        </member>
        <member name="T:Intuit.Ipp.Core.Rest.LogRequestsToDisk">
            <summary>
            Logs API Requests/Responses To Disk
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.LogRequestsToDisk.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.Rest.LogRequestsToDisk"/> class.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.LogRequestsToDisk.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.Rest.LogRequestsToDisk"/> class.
            </summary>
            <param name="enableServiceRequestLogging">Value indicating whether to log request response messages.</param>
            <param name="serviceRequestLoggingLocation">Request Response logging locationl</param>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.LogRequestsToDisk.EnableServiceRequestsLogging">
            <summary>
            Gets a value indicating whether Service Requests Logging should be enabled.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.LogRequestsToDisk.ServiceRequestLoggingLocation">
            <summary>
            Gets the Service Request Logging Location.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.LogRequestsToDisk.LogPlatformRequests(System.String,System.Boolean)">
            <summary>
            Logs the Platform Request to Disk.
            </summary>
            <param name="xml">The xml to log.</param>
            <param name="isRequest">Specifies whether the xml is request or response.</param>
        </member>
        <member name="T:Intuit.Ipp.Core.Rest.AsyncRestHandler">
            <summary>
            RestRequestHandler contains the logic for preparing the REST request, calls REST services and returns the response.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Rest.AsyncRestHandler.requestBody">
            <summary>
            Request Body.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Rest.AsyncRestHandler.context">
            <summary>
            Gets or sets the context.
            </summary>
            <value>
            The context.
            </value>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.#ctor(Intuit.Ipp.Core.ServiceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.Rest.AsyncRestHandler"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Intuit.Ipp.Core.Rest.AsyncRestHandler"/> class from being created.
            </summary>
        </member>
        <member name="E:Intuit.Ipp.Core.Rest.AsyncRestHandler.OnCallCompleted">
            <summary>
            Callback event.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.AsyncRestHandler.IsSyncRequestStream">
            <summary>
            Gets the value which indicates not to set the request body of the http web request.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.PrepareRequest(Intuit.Ipp.Core.Rest.RequestParameters,System.Object,System.String,System.Boolean)">
            <summary>
            Prepares the HttpWebRequest along with authentication header added to the request.
            </summary>
            <param name="requestParameters">The parameters.</param>
            <param name="requestBody">The request entity.</param>
            <param name="oauthRequestUri">The OAtuth request uri.</param>
            <returns>
            Http web request object.
            </returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.GetResponse(System.Net.HttpWebRequest)">
            <summary>
            Returns the response by calling REST service.
            </summary>
            <param name="request">The request.</param>
            <returns>Response from REST service.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.GetResponseStream(System.Net.HttpWebRequest)">
            <summary>
            Returns the response stream by calling REST service.
            </summary>
            <param name="request">The request.</param>
            <returns>Response from REST service.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.ExecAsyncRequestWithRetryPolicy(System.Net.HttpWebRequest)">
            <summary>
            Executes the Asynchronous Request.
            </summary>
            <param name="asyncRequest">Asynchronous web request.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.ExecuteServiceCallAsync(System.Net.HttpWebRequest)">
            <summary>
            Executes the Service Call using the Retry Policy.
            </summary>
            <param name="myRequest">Http Request.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.CreateEventArgsForException(System.Exception)">
            <summary>
            Creates the Event Args for Exception/Fault responses from server.
            </summary>
            <param name="exception">The exception class.</param>
            <returns>Async CallCompletedEvent Arguments.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.CreateEventArgsForRequest(System.IAsyncResult)">
            <summary>
            Creates the Event Args for success responses from server.
            </summary>
            <param name="asyncResult">The IAsynResult.</param>
            <returns>Async CallCompletedEvent Arguments.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.ConvertResponseStreamToBytes(System.IO.Stream)">
            <summary>
            Gets a response stream and returns them as byte array.
            </summary>
            <param name="responseStream">Stream from web response</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.ExecAsyncRequest(System.Net.HttpWebRequest)">
            <summary>
            Executes the Asynchronous Request.
            </summary>
            <param name="asyncRequest">Asynchronous web request.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.AsyncExecutionCompleted(System.IAsyncResult)">
            <summary>
            Call back method for Find all entities  Asynchronously 
            </summary>
            <param name="result">Asynchronous Result.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.GetRequestStreamCallback(System.IAsyncResult)">
            <summary>
            Callback for GetRequestStream.
            </summary>
            <param name="asynchronousResult">Asynchronous Result.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.AsyncRestHandler.HandleErrors(System.String)">
            <summary>
            Check the response for any errors it might indicate. Will throw an exception if API response indicates an error.
            Will throw an exception if it has a problem determining success or error.
            </summary>
            <param name="responseXml">the QuickBase response to examine</param>
            <returns>Asyn Call Completed Arguments.</returns>
        </member>
        <member name="T:Intuit.Ipp.Core.Rest.NamespaceDoc">
            <summary>
            Intuit.IPP.Core has ServiceContext class which must be created to invoke REST Service APIs. 
            The assembly provides different constructors such as, OAuth, SAML and, User name and password to initiate 
            ServiceContext class.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Rest.EncodingFixer">
            <summary>
            Helps repair encoding of QuickBase responses.
            </summary>
            <seealso cref="M:Intuit.Ipp.Core.Rest.EncodingFixer.FixQuickBaseEncoding(System.Byte[])"/>
        </member>
        <member name="F:Intuit.Ipp.Core.Rest.EncodingFixer.Replacements">
            <summary>
            A list of characters for which QuickBase always uses Windows-1252 encoding. For use in FixQuickBaseEncoding().
            "LEFT DOUBLE QUOTATION MARK"
            "RIGHT DOUBLE QUOTATION MARK"
            "EN DASH"
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.EncodingFixer.FixQuickBaseEncoding(System.Byte[])">
            <summary>
            QuickBase has a unique feature which converts certain input characters into windows-1252 encoding and stores them in the database
            (This assists Windows users when they use QuickBase HTML UI). When data containing such characters is queried, 
            the windows-1252 encoding will not change and will remain surrounded by the usual UTF8-encoded XML.
            If this data requires XML parsing, the windows-1252 encoded characters have to be re-encoded to UTF8 encoding.
            This unique feature was recently removed from appcenter, but still exists in QuickBase.
            </summary>
            <param name="encodedValue">a response from QuickBase that's mostly UTF8 encoded but has Windows-1252-encoded characters embedded in it</param>
            <returns>Returns the encoded response.</returns>
        </member>
        <member name="T:Intuit.Ipp.Core.Rest.FaultHandler">
            <summary>
            Handles the fault tags in the response and handles them.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Rest.FaultHandler.context">
            <summary>
            The Service Context.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.FaultHandler.#ctor(Intuit.Ipp.Core.ServiceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.Rest.FaultHandler"/> class.
            </summary>
            <param name="context">The service context.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.FaultHandler.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Intuit.Ipp.Core.Rest.FaultHandler"/> class from being created.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.FaultHandler.ParseResponseAndThrowException(System.Net.WebException,System.Boolean)">
            <summary>
            Parses the Response and throws appropriate exceptions.
            </summary>
            <param name="webException">Web Exception.</param>
            <param name="isIps">Specifies whether the exception is generated by an IPS call.</param>
            <returns>Ids Exception.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.FaultHandler.ParseErrorResponseAndPrepareException(System.String)">
            <summary>
            Parses the error response and prepares the response.
            </summary>
            <param name="errorString">The error string.</param>
            <returns>Ids Exception.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.FaultHandler.ExtractFaultFromResponse(System.String)">
            <summary>
            Extracts the Fault from the Error Response.
            </summary>
            <param name="errorString">The error string.</param>
            <returns>Fault object.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.FaultHandler.IterateFaultAndPrepareException(Intuit.Ipp.Data.Fault)">
            <summary>
            Iterates Fault and Prepares the Exception.
            </summary>
            <param name="fault">Fault object.</param>
            <returns>Ids exception.</returns>
        </member>
        <member name="T:Intuit.Ipp.Core.Rest.RequestParameters">
            <summary>
            Parameters for calling Rest calls.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.RequestParameters.#ctor(System.String,Intuit.Ipp.Core.HttpVerbType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.Rest.RequestParameters"/> class.
            </summary>
            <param name="resourceUri">The resource URI.</param>
            <param name="verb">The http verb.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.RequestParameters.#ctor(System.String,Intuit.Ipp.Core.HttpVerbType,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.Rest.RequestParameters"/> class.
            </summary>
            <param name="resourceUri">The resource URI.</param>
            <param name="verb">The http verb.</param>
            <param name="contentType">Type of the content.</param>
            <param name="apiName">Name of the API.</param>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RequestParameters.ResourceUri">
            <summary>
            Gets the resource URI.
            </summary>
            <value>
            The resource URI.
            </value>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RequestParameters.Verb">
            <summary>
            Gets the verb.
            </summary>
            <value>
            The http verb.
            </value>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RequestParameters.ContentType">
            <summary>
            Gets the type of the content.
            </summary>
            <value>
            The type of the content.
            </value>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RequestParameters.ApiName">
            <summary>
            Gets the name of the API.
            </summary>
            <value>
            The name of the API.
            </value>
        </member>
        <member name="T:Intuit.Ipp.Core.Rest.RestHandler">
            <summary>
            Rest Handler class.
            </summary>
            <seealso cref="T:Intuit.Ipp.Core.Rest.RestHandler"/>
        </member>
        <member name="F:Intuit.Ipp.Core.Rest.RestHandler.serviceContext">
            <summary>
            Gets or sets the context.
            </summary>
            <value>
            The context.
            </value>
        </member>
        <member name="F:Intuit.Ipp.Core.Rest.RestHandler.responseSerializer">
            <summary>
            Response serializer.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.RestHandler.#ctor(Intuit.Ipp.Core.ServiceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.Rest.RestHandler"/> class.
            </summary>
            <param name="context">The Service Context.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.RestHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.Rest.RestHandler"/> class.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RestHandler.IsSyncRequestStream">
            <summary>
            Gets a value indicating whether to write to request stream or not.
            For async requests GetRequestStream is an async operation.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RestHandler.RequestCompressor">
            <summary>
            Gets or sets Request compressor.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RestHandler.ResponseCompressor">
            <summary>
            Gets or sets Response compressor.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RestHandler.RequestSerializer">
            <summary>
            Gets or sets Request serializer.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RestHandler.RequestLogging">
            <summary>
            Gets or sets Request Logging.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RestHandler.MinorVersion">
            <summary>
            Gets or sets the minorVersion.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RestHandler.Include">
            <summary>
            Gets or sets the Include param.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.RestHandler.RequestId">
            <summary>
            Gets or sets the requestId param.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.RestHandler.PrepareRequest(Intuit.Ipp.Core.Rest.RequestParameters,System.Object,System.String,System.Boolean)">
            <summary>
            Prepares the HttpWebRequest along with authentication header added to the request.
            </summary>
            <param name="requestParameters">The parameters.</param>
            <param name="requestBody">The request entity.</param>
            <param name="oauthRequestUri">The OAuth request uri.</param>
            <returns>
            Http web request object.
            </returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.RestHandler.StripFirstSlash(System.String)">
            <summary>
            Strip first slash
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.RestHandler.AppendQueryParameters(System.String,System.String,System.String)">
            <summary>
            Append Query Parameters
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.RestHandler.GetResponse(System.Net.HttpWebRequest)">
            <summary>
            Returns the response by calling REST service.
            </summary>
            <param name="request">The request.</param>
            <returns>Response from REST service.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.RestHandler.GetResponseStream(System.Net.HttpWebRequest)">
            <summary>
            Returns the response stream by calling REST service.
            </summary>
            <param name="request">The request.</param>
            <returns>Response from REST service.</returns>
        </member>
        <member name="T:Intuit.Ipp.Core.Rest.SyncRestHandler">
            <summary>
            SyncRestHandler contains the logic for preparing the REST request, calls REST services and returns the response.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.Rest.SyncRestHandler.context">
            <summary>
            Gets or sets the context.
            </summary>
            <value>
            The context.
            </value>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.SyncRestHandler.#ctor(Intuit.Ipp.Core.ServiceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.Rest.SyncRestHandler"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.SyncRestHandler.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Intuit.Ipp.Core.Rest.SyncRestHandler"/> class from being created.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Rest.SyncRestHandler.IsSyncRequestStream">
            <summary>
            Gets the value which indicates to set the request body of the http web request.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.SyncRestHandler.PrepareRequest(Intuit.Ipp.Core.Rest.RequestParameters,System.Object,System.String,System.Boolean)">
            <summary>
            Prepares the HttpWebRequest along with authentication header added to the request.
            </summary>
            <param name="requestParameters">The parameters.</param>
            <param name="requestBody">The request entity.</param>
            <param name="oauthRequestUri">The OAuth reqeust uri.</param>
            <returns>
            Http web request object.
            </returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.SyncRestHandler.GetResponse(System.Net.HttpWebRequest)">
            <summary>
            Returns the response by calling REST service.
            </summary>
            <param name="request">The request.</param>
            <returns>Response from REST service.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.SyncRestHandler.GetResponseStream(System.Net.HttpWebRequest)">
            <summary>
            Returns the response stream by calling REST service.
            </summary>
            <param name="request">The request.</param>
            <returns>Response from REST service.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.Rest.SyncRestHandler.CallRestService(System.Net.HttpWebRequest)">
            <summary>
            Calls the rest service.
            </summary>
            <param name="request">The request.</param>
            <returns>Returns the response.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Intuit.Ipp.Core.Rest.SyncRestHandler.GetRestServiceCallResponseStream(System.Net.HttpWebRequest)" -->
        <member name="M:Intuit.Ipp.Core.Rest.SyncRestHandler.ParseResponse(System.Net.HttpWebResponse)">
            <summary>
            Parses the response object.
            </summary>
            <param name="httpWebResponse">The Http Web Response object.</param>
            <returns>Returns the response by parsing httpWebResponse object.</returns>
        </member>
        <member name="T:Intuit.Ipp.Core.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.AppTokenParameterName">
            <summary>
              Looks up a localized string similar to appToken.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.ArgumentCannotBeGreaterThanBaseline">
            <summary>
              Looks up a localized string similar to The specified argument {0} cannot be greater than its ceiling value of {1}..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.ArgumentCannotBeNegative">
            <summary>
              Looks up a localized string similar to The specified argument {0} cannot be initialized with a negative value..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.BaseUriNullMessage">
            <summary>
              Looks up a localized string similar to Could not retrieve BaseURI property. The given realm might not be part of QBO..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.CommunicationErrorMessage">
            <summary>
              Looks up a localized string similar to There was an error while communicating with the Ids Server..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.CurrentCompanyNullMessage">
            <summary>
              Looks up a localized string similar to The CurrentCompany property of Quickbase Online User is null..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.DefaultMinorVersionValue">
            <summary>
              Looks up a localized string similar to 35.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.ErrorCodeMissing">
            <summary>
              Looks up a localized string similar to API response without Error code element..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.ErrorCodeNonNemeric">
            <summary>
              Looks up a localized string similar to Error code &quot;{0}&quot; not numeric!.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.ErrorDetails0">
            <summary>
              Looks up a localized string similar to {0} (Error {1}, Detail: {2}).
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.ErrorDetails1">
            <summary>
              Looks up a localized string similar to {0} (Error {1}).
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.ErrorWithNoText">
            <summary>
              Looks up a localized string similar to Error {0}.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.ExceptionGeneratedMessage">
            <summary>
              Looks up a localized string similar to Exception has been generated: {0}..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.NoServiceTypeResponseMessage">
            <summary>
              Looks up a localized string similar to The response did not contain the service type..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.ParameterNotNullEmptyMessage">
            <summary>
              Looks up a localized string similar to Parameter Cannot be null or empty..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.ParameterNotNullMessage">
            <summary>
              Looks up a localized string similar to Parameter cannot be null..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.RealmIdNotFoundMessage">
            <summary>
              Looks up a localized string similar to The realm id for the appToken could not be found..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.RealmIdParameterName">
            <summary>
              Looks up a localized string similar to realmId.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.RequestValidatorParameterName">
            <summary>
              Looks up a localized string similar to requestValidator.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.ResponseStreamNullOrEmptyMessage">
            <summary>
              Looks up a localized string similar to The Response Stream was null or empty..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.ResponseStreamReadFailedMessage">
            <summary>
              Looks up a localized string similar to Failed to read the response stream..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.RetryLimitExceeded">
            <summary>
              Looks up a localized string similar to The action has exceeded its defined retry limit..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.SerializationExceptionMessage">
            <summary>
              Looks up a localized string similar to The Deserialization to Quickbooks Online User failed..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.Properties.Resources.ValidDirectoryPathMessage">
            <summary>
              Looks up a localized string similar to Please specify a valid directory path..
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.Compression.NamespaceDoc">
            <summary>
            Intuit.IPP.Core has ServiceContext class which must be created to invoke REST Service APIs. 
            The assembly provides different constructors such as, OAuth, SAML and, User name and password to initiate 
            ServiceContext class.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.DataServiceCallback`1">
            <summary>
            Contains event handlers for call back events.
            </summary>
            <typeparam name="T">Generic Constraint </typeparam>
        </member>
        <member name="T:Intuit.Ipp.Core.DataServiceCallback`1.CallCompletedEventHandler">
            <summary>
            Generic event handler to handle multiple call backs.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="callCompletedEventArgs">Call Completed Event Args.</param>
        </member>
        <member name="T:Intuit.Ipp.Core.DataServiceCallback`1.PdfCallCompletedEventHandler">
            <summary>
            Generic event handler to handle multiple pdf call backs.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="pdfCallCompletedEventArgs">Pdf Call Completed Event Args.</param>
        </member>
        <member name="T:Intuit.Ipp.Core.DataServiceCallback`1.FindAllCallCompletedEventHandler">
            <summary>
            Event handler to handle FindAll asynchronous call back.
            </summary>
            <param name="sender">Sender of this event.</param>
            <param name="findAllCallCompletedEventArgs">FindAll Call Completed Event Args.</param>
        </member>
        <member name="T:Intuit.Ipp.Core.DataServiceCallback`1.CDCCallCompletedEventHandler">
            <summary>
            Event handler to handle CDC asynchronous call back.
            </summary>
            <param name="sender">Sender of this event.</param>
            <param name="cdcCallCompletedEventArgs">CDC Call Completed Event Args.</param>
        </member>
        <member name="T:Intuit.Ipp.Core.DataServiceCallback`1.AsyncCallCompletedEventHandler">
            <summary>
            Generic Event handler to handle asynchronous call back.
            </summary>
            <param name="sender">Sender of this event.</param>
            <param name="asyncCallCompletedEventArgs">Async Call Completed Event Args.</param>
        </member>
        <member name="T:Intuit.Ipp.Core.EntitlementServiceCallback`1">
            <summary>
            Contains event handlers for call back events.
            </summary>
            <typeparam name="T">Generic Constraint </typeparam>
        </member>
        <member name="T:Intuit.Ipp.Core.EntitlementServiceCallback`1.EntitlementCallCompletedEventHandler">
            <summary>
            Generic Event handler to handle Entitlements asynchronous call back.
            </summary>
            <param name="sender">Sender of this event.</param>
            <param name="entitlementCallCompletedEventArgs">Entitlements Call Completed Event Args.</param>
        </member>
        <member name="T:Intuit.Ipp.Core.AsyncCallCompletedEventArgs">
            <summary>
            Asynchronous call completed event arguments
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.AsyncCallCompletedEventArgs.results">
            <summary>
            The result of the asynchronous operation.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.AsyncCallCompletedEventArgs.byteResults">
            <summary>
            The result of the asynchronous operation in bytes.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.AsyncCallCompletedEventArgs.error">
            <summary>
            Ids Exception.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.AsyncCallCompletedEventArgs.#ctor(System.String,Intuit.Ipp.Exception.IdsException,System.Byte[])">
            <summary>
            Initializes a new instance of the AsyncCallCompletedEventArgs class.
            /// </summary>
            <param name="result">Result of the asynchronous operation.</param>
            <param name="error">Ids Exception.</param>
        </member>
        <member name="P:Intuit.Ipp.Core.AsyncCallCompletedEventArgs.Result">
            <summary>
            Gets Result returned from the Asynchronous call
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.AsyncCallCompletedEventArgs.ByteResult">
            <summary>
            Gets Byte Result returned from the Asynchronous call
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.AsyncCallCompletedEventArgs.Error">
            <summary>
            Gets Ids Exception.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.CallCompletedEventArgs`1">
            <summary>
            Contains events for call back methods and corresponding fields
            </summary>
            <typeparam name="T">Generic constraint of type IEntity.</typeparam>
        </member>
        <member name="M:Intuit.Ipp.Core.CallCompletedEventArgs`1.#ctor">
            <summary>
            Initializes a new instance of the CallCompletedEventArgs class.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.CallCompletedEventArgs`1.Entity">
            <summary>
            Gets or sets the Entity of type T.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.CallCompletedEventArgs`1.Error">
            <summary>
            Gets or sets the error.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.PdfCallCompletedEventArgs">
            <summary>
            Contains events for call pdf back methods and corresponding fields
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.PdfCallCompletedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the CallCompletedEventArgs class.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.PdfCallCompletedEventArgs.PdfBytes">
            <summary>
            Gets or sets the Entity of type T.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.PdfCallCompletedEventArgs.Error">
            <summary>
            Gets or sets the error.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.CDCCallCompletedEventArgs">
            <summary>
            Event argument is class used to communicate after FindAll operation completed.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.CDCCallCompletedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the FindAllCallCompletedEventArgs class.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.CDCCallCompletedEventArgs.Entities">
            <summary>
            Gets or sets Entities from the result.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.CDCCallCompletedEventArgs.Error">
            <summary>
            Gets or sets Ids Exception.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.CDCCallCompletedEventArgs.getEntity(System.String)">
            <summary>
            Gets the List of entity value with particular key
            </summary>
            <param name="key">key.</param>
        </member>
        <member name="T:Intuit.Ipp.Core.EntitlementCallCompletedEventArgs`1">
            <summary>
            Contains events for call back methods and corresponding fields
            </summary>
            <typeparam name="T">Generic constraint of type IEntity.</typeparam>
        </member>
        <member name="M:Intuit.Ipp.Core.EntitlementCallCompletedEventArgs`1.#ctor">
            <summary>
            Initializes a new instance of the CallCompletedEventArgs class.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.EntitlementCallCompletedEventArgs`1.EntitlementsResponse">
            <summary>
            Gets or sets the Entity of type T.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.EntitlementCallCompletedEventArgs`1.Error">
            <summary>
            Gets or sets the error.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.FindAllCallCompletedEventArgs">
            <summary>
            Event argument is class used to communicate after FindAll operation completed.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.FindAllCallCompletedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the FindAllCallCompletedEventArgs class.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.FindAllCallCompletedEventArgs.Entities">
            <summary>
            Gets or sets Entities from the result.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.FindAllCallCompletedEventArgs.Error">
            <summary>
            Gets or sets Ids Exception.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.GlobalTaxServiceCallCompletedEventArgs`1">
            <summary>
            Contains events for call back methods and corresponding fields
            </summary>
            <typeparam name="T">Generic constraint of type TaxService.</typeparam>
        </member>
        <member name="M:Intuit.Ipp.Core.GlobalTaxServiceCallCompletedEventArgs`1.#ctor">
            <summary>
            Initializes a new instance of the CallCompletedEventArgs class.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.GlobalTaxServiceCallCompletedEventArgs`1.TaxService">
            <summary>
            Gets or sets the Entity of type T.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.GlobalTaxServiceCallCompletedEventArgs`1.Error">
            <summary>
            Gets or sets the error.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.ReportCallCompletedEventArgs`1">
            <summary>
            Contains events for call back methods and corresponding fields
            </summary>
            <typeparam name="T">Generic constraint of type IEntity.</typeparam>
        </member>
        <member name="M:Intuit.Ipp.Core.ReportCallCompletedEventArgs`1.#ctor">
            <summary>
            Initializes a new instance of the CallCompletedEventArgs class.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.ReportCallCompletedEventArgs`1.Report">
            <summary>
            Gets or sets the Entity of type T.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.ReportCallCompletedEventArgs`1.Error">
            <summary>
            Gets or sets the error.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.GlobalTaxServiceCallback`1">
            <summary>
            Contains event handlers for call back events.
            </summary>
            <typeparam name="T">Generic Constraint </typeparam>
        </member>
        <member name="T:Intuit.Ipp.Core.GlobalTaxServiceCallback`1.GlobalTaxServiceCallCompletedEventHandler">
            <summary>
            Generic Event handler to handle TaxService asynchronous call back.
            </summary>
            <param name="sender">Sender of this event.</param>
            <param name="taxServiceCallCompletedEventArgs">TaxService Call Completed Event Args.</param>
        </member>
        <member name="T:Intuit.Ipp.Core.HttpVerbType">
            <summary>
            Enumeration for the different values that can be used as value for HttpWebRequest method property. 
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.HttpVerbType.GET">
            <summary>
            Http Get verb.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.HttpVerbType.PUT">
            <summary>
            Http Put verb.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.HttpVerbType.DELETE">
            <summary>
            Http Delete verb.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.HttpVerbType.POST">
            <summary>
            Http Post verb.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.ReportServiceCallback`1">
            <summary>
            Contains event handlers for call back events.
            </summary>
            <typeparam name="T">Generic Constraint </typeparam>
        </member>
        <member name="T:Intuit.Ipp.Core.ReportServiceCallback`1.ReportCallCompletedEventHandler">
            <summary>
            Generic Event handler to handle Report asynchronous call back.
            </summary>
            <param name="sender">Sender of this event.</param>
            <param name="reportCallCompletedEventArgs">Report Call Completed Event Args.</param>
        </member>
        <member name="T:Intuit.Ipp.Core.IExtendedRetry">
            <summary>
            Custom exception retry strategy contracts.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.IExtendedRetry.IsRetryException(System.Exception)">
            <summary>
            Determines whether [is retry exception] [the specified ex].
            </summary>
            <param name="ex">The exception object.</param>
            <returns>
              <c>true</c> if [is parameter (ex) is retry exception]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Intuit.Ipp.Core.IntuitRetryHelper">
            <summary>
            Class contains Helper Methods for Services.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryHelper.IsArgumentNull(System.Object,System.String)">
            <summary>
            Checks an argument to ensure it isn't null.
            </summary>
            <param name="argumentValue">The argument value to check.</param>
            <param name="argumentName">The name of the argument.</param>
            /// <returns>The return value should be ignored. It is intended to be used only when validating arguments during instance creation (e.g. when calling base constructor).</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryHelper.ArgumentNotNegativeValue(System.Int32,System.String)">
            <summary>
            Checks an argument to ensure that its value is not negative.
            </summary>
            <param name="argumentValue">The <see cref="T:System.Int32"/> value of the argument.</param>
            <param name="argumentName">The name of the argument for diagnostic purposes.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryHelper.ArgumentNotNegativeValue(System.Int64,System.String)">
            <summary>
            Checks an argument to ensure that its value is not negative.
            </summary>
            <param name="argumentValue">The <see cref="T:System.Int64"/> value of the argument.</param>
            <param name="argumentName">The name of the argument for diagnostic purposes.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryHelper.ArgumentNotGreaterThan(System.Double,System.Double,System.String)">
            <summary>
            Checks an argument to ensure that its value doesn't exceed the specified ceiling baseline.
            </summary>
            <param name="argumentValue">The <see cref="T:System.Double"/> value of the argument.</param>
            <param name="ceilingValue">The <see cref="T:System.Double"/> ceiling value of the argument.</param>
            <param name="argumentName">The name of the argument for diagnostic purposes.</param>
        </member>
        <member name="T:Intuit.Ipp.Core.IntuitRetryingEventArgs">
            <summary>
            Contains information required for the IntuitRetryPolicy retrying event.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryingEventArgs.#ctor(System.Int32,System.TimeSpan,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.IntuitRetryingEventArgs"/> class.
            </summary>
            <param name="currentRetryCount">The current retry attempt count.</param>
            <param name="delay">The delay indicating how long the current thread will be suspended for before the next iteration will be invoked.</param>
            <param name="lastException">The exception which caused the retry conditions to occur.</param>
        </member>
        <member name="P:Intuit.Ipp.Core.IntuitRetryingEventArgs.CurrentRetryCount">
            <summary>
            Gets the current retry count.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.IntuitRetryingEventArgs.Delay">
            <summary>
            Gets the delay which indicates how long the current thread will be suspended for before the next iteration will be invoked.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.IntuitRetryingEventArgs.LastException">
            <summary>
            Gets the exception which caused the retry conditions to occur.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.ShouldRetry">
            <summary>
            Defines a delegate that will be invoked whenever a retry condition is encountered.
            </summary>
            <param name="retryCount">The current retry attempt count.</param>
            <param name="lastException">The exception which caused the retry conditions to occur.</param>
            <param name="delay">The delay delay which indicates how long the current thread will be suspended for before the next iteration will be invoked.</param>
            <returns>Returns a delegate that will be invoked whenever to retry should be attempt.</returns>
        </member>
        <member name="T:Intuit.Ipp.Core.IntuitRetryPolicy">
            <summary>
             Provides the retry mechanism for unreliable actions and transient conditions.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.IntuitRetryPolicy.context">
            <summary>
            The Service Context.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.IntuitRetryPolicy.shouldRetry">
            <summary>
            Delegate that will be invoked whenever a retry condition is encountered.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.IntuitRetryPolicy.retryCount">
            <summary>
            The Retry Count.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.IntuitRetryPolicy.retryInterval">
            <summary>
            The Retry Interval.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.IntuitRetryPolicy.initialInterval">
            <summary>
            The initial interval value that will apply for the first retry.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.IntuitRetryPolicy.increment">
            <summary>
            The incremental time value that will be used for calculating the progressive delay between retries.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.IntuitRetryPolicy.minBackOff">
            <summary>
            The minimum back-off time.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.IntuitRetryPolicy.maxBackOff">
            <summary>
            The maximum back-off time.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.IntuitRetryPolicy.deltaBackOff">
            <summary>
            The value which will be used to calculate a random delta in the exponential delay between retries.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryPolicy.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Intuit.Ipp.Core.IntuitRetryPolicy"/> class from being created.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryPolicy.#ctor(Intuit.Ipp.Core.ServiceContext,System.Int32,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.IntuitRetryPolicy"/> class.
            </summary>
            <param name="context">The service context.</param>
            <param name="retryCount">The number of retry attempts.</param>
            <param name="retryInterval">The time interval between retries.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryPolicy.#ctor(System.Int32,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.IntuitRetryPolicy"/> class.
            </summary>
            <param name="retryCount">The number of retry attempts.</param>
            <param name="retryInterval">The time interval between retries.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryPolicy.#ctor(Intuit.Ipp.Core.ServiceContext,System.Int32,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.IntuitRetryPolicy"/> class.
            </summary>
            <param name="context">The service context.</param>
            <param name="retryCount">The number of retry attempts.</param>
            <param name="initialInterval">The initial interval that will apply for the first retry.</param>
            <param name="increment">The incremental time value that will be used for calculating the progressive delay between retries.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryPolicy.#ctor(System.Int32,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.IntuitRetryPolicy"/> class.
            </summary>
            <param name="retryCount">The number of retry attempts.</param>
            <param name="initialInterval">The initial interval that will apply for the first retry.</param>
            <param name="increment">The incremental time value that will be used for calculating the progressive delay between retries.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryPolicy.#ctor(Intuit.Ipp.Core.ServiceContext,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.IntuitRetryPolicy"/> class.
            </summary>
            <param name="context">The service context.</param>
            <param name="retryCount">The maximum number of retry attempts.</param>
            <param name="minBackoff">The minimum back-off time</param>
            <param name="maxBackoff">The maximum back-off time.</param>
            <param name="deltaBackoff">The value which will be used to calculate a random delta in the exponential delay between retries.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryPolicy.#ctor(System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.IntuitRetryPolicy"/> class.
            </summary>
            <param name="retryCount">The maximum number of retry attempts.</param>
            <param name="minBackoff">The minimum back-off time</param>
            <param name="maxBackoff">The maximum back-off time.</param>
            <param name="deltaBackoff">The value which will be used to calculate a random delta in the exponential delay between retries.</param>
        </member>
        <member name="E:Intuit.Ipp.Core.IntuitRetryPolicy.Retrying">
            <summary>
            An instance of a callback delegate that will be invoked whenever a retry condition is encountered.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.IntuitRetryPolicy.ExtendedRetryException">
            <summary>
            Gets or sets the extended exception retry strategy.
            </summary>
            <value>
            The extended exception retry strategy.
            </value>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryPolicy.ExecuteAction(System.Action)">
            <summary>
            Repetitively executes the specified action while it satisfies the current retry policy.
            </summary>
            <param name="action">A delegate representing the executable action which doesn't return any results.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryPolicy.ExecuteAction(System.Action{System.AsyncCallback},System.Action{System.IAsyncResult},System.Action,System.Action{System.Exception})">
            <summary>
            Repetitively executes the specified asynchronous action while it satisfies the current retry policy.
            </summary>
            <param name="beginAction">The begin method of the async pattern.</param>
            <param name="endAction">The end method of the async pattern.</param>
            <param name="successHandler">The action to perform when the async operation is done.</param>
            <param name="faultHandler">The fault handler delegate that will be triggered if the operation cannot be successfully invoked despite retry attempts.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryPolicy.ExecuteAction``1(System.Action{System.AsyncCallback},System.Func{System.IAsyncResult,``0},System.Action{``0},System.Action{System.Exception})">
            <summary>
            Repetitively executes the specified asynchronous action while it satisfies the current retry policy.
            </summary>
            <typeparam name="TResult">The type of the object returned by the async operation.</typeparam>
            <param name="beginAction">The begin method of the async pattern.</param>
            <param name="endAction">The end method of the async pattern.</param>
            <param name="successHandler">The action to perform when the async operation is done.</param>
            <param name="faultHandler">The fault handler delegate that will be triggered if the operation cannot be successfully invoked despite retry attempts.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryPolicy.OnRetrying(System.Int32,System.Exception,System.TimeSpan)">
            <summary>
            Notifies the subscribers whenever a retry condition is encountered.
            </summary>
            <param name="retryCount">The current retry attempt count.</param>
            <param name="lastError">The exception which caused the retry conditions to occur.</param>
            <param name="delay">The delay indicating how long the current thread will be suspended for before the next iteration will be invoked.</param>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryPolicy.CheckIsTransient(System.Exception)">
            <summary>
            Checks whether parameter ex is transient exception or not.
            </summary>
            <param name="ex">The exception.</param>
            <returns>Returns whether transient exception or not.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryPolicy.IsTransient(System.Exception)">
            <summary>
            Determines whether the specified exception represents a transient failure that can be compensated by a retry.
            </summary>
            <param name="ex">The exception object to be verified.</param>
            <returns>True if the specified exception is considered as transient, otherwise false.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryPolicy.ExecuteAction``1(System.Func{``0})">
            <summary>
            Repetitively executes the specified action while it satisfies the current retry policy.
            </summary>
            <typeparam name="TResult">The type of result expected from the executable action.</typeparam>
            <param name="func">A delegate representing the executable action which returns the result of type R.</param>
            <returns>The result from the action.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryPolicy.GetShouldFixedRetry">
            <summary>
            Returns the ShouldRetry delegate for Fixed retry policy.
            </summary>
            <returns>The ShouldRetry delegate.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryPolicy.GetShouldIncrementalRetry">
            <summary>
            Returns the ShouldRetry delegate for Incremental retry policy.
            </summary>
            <returns>The ShouldRetry delegate.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.IntuitRetryPolicy.GetShouldExponentialBackOffRetry">
            <summary>
            Returns the ShouldRetry delegate for ExponentialBackOff retry policy.
            </summary>
            <returns>The ShouldRetry delegate.</returns>
        </member>
        <member name="T:Intuit.Ipp.Core.IntuitServicesType">
            <summary>
            This Enumeration specifies which Intuit service to connect to.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.IntuitServicesType.QBO">
            <summary>
            QuickBooks Online Data through IDS.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.IntuitServicesType.IPS">
            <summary>
            Intuit Platform services.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.IntuitServicesType.None">
            <summary>
            None service type.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.Core.ServiceContext">
            <summary>
            Intuit Partner Platform Service Context.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.ServiceContext.realmId">
            <summary>
            The Realm Id.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.ServiceContext.serviceType">
            <summary>
            Intuit Service Type(QBO).
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.ServiceContext.baseserviceURL">
            <summary>
            Base Uri for IDS Service Call.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.ServiceContext.appToken">
            <summary>
            Application Token.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.ServiceContext.isCreateMethod">
            <summary>
            this flag indicates if static create methods of this class has been invoked.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.ServiceContext.messageValues">
            <summary>
            Temporary storage for serialization and compression values for request and reponse.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.ServiceContext.include">
            <summary>
            include param to be passed to services.  Responsible for getting additional data or special handling of request.
            </summary>
        </member>
        <member name="F:Intuit.Ipp.Core.ServiceContext.requestId">
            <summary>
            requestId param to be passed to services.  Responsible for identifying each request by a unique identifier.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.ServiceContext.#ctor(System.String,Intuit.Ipp.Core.IntuitServicesType,Intuit.Ipp.Security.IRequestValidator,Intuit.Ipp.Core.IConfigurationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.ServiceContext"/> class.
            </summary>
            <param name="realmId">The realm id.</param>
            <param name="serviceType">Service Type - QBO/QB.</param>
            <param name="requestValidator">The request validate.</param>
            <param name="configReader">The config reader, if <see langword="null"/>, <see cref="T:Intuit.Ipp.Core.Configuration.JsonFileConfigurationProvider" /> will be used</param>
            <returns>Returns ServiceContext object.</returns>
            <exception cref="T:Intuit.Ipp.Exception.IdsException">If arguments are null or empty.</exception>
            <exception cref="T:Intuit.Ipp.Exception.InvalidRealmException">If realm id is invalid.</exception>
            <exception cref="T:Intuit.Ipp.Exception.InvalidTokenException">If the token is invalid.</exception>
        </member>
        <member name="M:Intuit.Ipp.Core.ServiceContext.#ctor(System.String,System.String,Intuit.Ipp.Core.IntuitServicesType,Intuit.Ipp.Security.IRequestValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.Core.ServiceContext"/> class.
            </summary>
            <param name="appToken">Application Token.</param>
            <param name="realmId">The realm id.</param>
            <param name="serviceType">Service Type - QBO.</param>
            <param name="requestValidator">The request validate.</param>
            <returns>Returns ServiceContext object.</returns>
            <exception cref="T:Intuit.Ipp.Exception.IdsException">If arguments are null or empty.</exception>
            <exception cref="T:Intuit.Ipp.Exception.InvalidRealmException">If realm id is invalid.</exception>
            <exception cref="T:Intuit.Ipp.Exception.InvalidTokenException">If the token is invalid.</exception>
        </member>
        <member name="M:Intuit.Ipp.Core.ServiceContext.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Intuit.Ipp.Core.ServiceContext"/> class from being created.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.ServiceContext.IppConfiguration">
            <summary>
            Gets or sets the Ipp configuration.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.ServiceContext.BaseUrl">
            <summary>
            Gets Base Uri for IDS Service Calls.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.ServiceContext.RealmId">
            <summary>
            Gets Realm/Company Id.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.ServiceContext.AppToken">
            <summary>
            Gets or Sets the Application Token.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.ServiceContext.ServiceType">
            <summary>
            Gets Intuit Service Type.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.ServiceContext.Include">
            <summary>
            Gets Intuit Include Type.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.ServiceContext.MinorVersion">
            <summary>
            Gets Intuit MinorVersion Type.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.ServiceContext.RequestId">
            <summary>
            Gets Unique requestId for the API call.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Core.ServiceContext.Timeout">
            <summary>
            timeout param to be passed to services.  To setup the ReadWriteTimeout property in HttpWebRequest.
            It is only for sync web requests. If not set, the default timeout will be used.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.ServiceContext.UseDataServices">
            <summary>
            Populates the values of the service context like realmId, service type to the Data Services being targetted.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.ServiceContext.UsePlatformServices">
            <summary>
            Populates the values of the service context like service type and base url to Platform Services.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.ServiceContext.SetDefaultConfigurationForIPS">
            <summary>
            Sets the default configuration values for IPS operations.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.ServiceContext.RevertConfiguration">
            <summary>
            Reverts the ipp configuration to the original values.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.Core.ServiceContext.GetBaseURL">
            <summary>
            Gets the base Uri for a QBO user.
            </summary>
            <returns>Returns the base Uri endpoint for a user.</returns>
        </member>
        <member name="M:Intuit.Ipp.Core.ServiceContext.GetMinorVersion">
            <summary>
            Gets the minorVersion for a QBO call
            </summary>
            <returns>Returns the minorVersion</returns>
        </member>
        <member name="T:Intuit.Ipp.Retry.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Retry.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Retry.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Retry.Properties.Resources.ArgumentCannotBeGreaterThanBaseline">
            <summary>
              Looks up a localized string similar to The specified argument {0} cannot be greater than its ceiling value of {1}..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Retry.Properties.Resources.ArgumentCannotBeNegative">
            <summary>
              Looks up a localized string similar to The specified argument {0} cannot be initialized with a negative value..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.Retry.Properties.Resources.RetryLimitExceeded">
            <summary>
              Looks up a localized string similar to The action has exceeded its defined retry limit..
            </summary>
        </member>
    </members>
</doc>
